import { Theme } from "../theme.slint";

export component ProgressBar inherits Rectangle {
    in property <float> value: 5;
    in property <float> maximum: 10;
    in property <float> minimum: 0;
    height: 5px;

    Rectangle {
        padding-top: 0.4px;
        padding-bottom: 0.4px;
        border-radius: root.height / 2;
        background: Theme.palette.progress-bar-background;
    }

    Rectangle {
        x: 0;
        y: 0;
        width: (root.width / (root.maximum - root.minimum)) * root.value;
        border-radius: root.height / 2;
        background: Theme.palette.progress-bar-accent;
    }
}

export component SpinBox inherits Rectangle { }

export component TrackSlider inherits Rectangle {
    in-out property <float> maximum: 100;
    in-out property <float> minimum: 0;
    in-out property <float> value;

    min-height: 10px;
    min-width: 100px;
    horizontal-stretch: 1;
    vertical-stretch: 0;

    border-radius: root.height / 2;
    background: Theme.palette.progress-bar-background;

    Rectangle {
        x: 0;
        y: 0;
        width: min(handle.x + handle.width, root.width);
        border-radius: root.height / 2;
        background: Theme.palette.progress-bar-accent;
    }

    handle := Rectangle {
        width: self.height;
        height: parent.height;
        border-radius: self.height / 2;
        background: Theme.palette.progress-bar-accent;
        x: (root.width - handle.width) * (root.value - root.minimum) / (root.maximum - root.minimum);
    }

    touch := TouchArea {
        property <float> pressed-value;
        pointer-event(event) => {
            if (event.button == PointerEventButton.left && event.kind == PointerEventKind.down) {
                self.pressed-value = root.value;
            }
        }
        moved => {
            if (self.enabled && self.pressed) {
                root.value = max(root.minimum, min(root.maximum,
                    self.pressed-value + (touch.mouse-x - touch.pressed-x) * (root.maximum - root.minimum) / (root.width - handle.width)));
            }
        }
    }
}
